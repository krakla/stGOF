,"lazyeval"
,"lhs"
,"lifecycle"
,"listenv"
,"lme4"
,"lmtest"
,"loo"
,"lubridate"
,"magrittr"
,"maps"
,"maptools"
,"markdown"
,"MatrixModels"
,"matrixStats"
,"memoise"
,"mime"
,"minqa"
,"modeldata"
,"ModelMetrics"
,"modelr"
,"modeltime"
,"multcomp"
,"munsell"
,"mvtnorm"
,"nloptr"
,"numDeriv"
,"odbc"
,"openssl"
,"padr"
,"parallelly"
,"parsnip"
,"patchwork"
,"pbkrtest"
,"PerformanceAnalytics"
,"pillar"
,"pkgbuild"
,"pkgconfig"
,"pkgload"
,"plogr"
,"plotly"
,"plyr"
,"png"
,"praise"
,"prettyunits"
,"pROC"
,"processx"
,"prodlim"
,"progress"
,"progressr"
,"promises"
,"prophet"
,"proxy"
,"ps"
,"purrr"
,"quadprog"
,"Quandl"
,"quantmod"
,"quantreg"
,"R6"
,"randomForest"
,"rappdirs"
,"rcmdcheck"
,"RColorBrewer"
,"Rcpp"
,"RcppArmadillo"
,"RcppEigen"
,"RcppParallel"
,"RcppRoll"
,"reactable"
,"reactR"
,"readr"
,"readxl"
,"recipes"
,"rematch"
,"rematch2"
,"remotes"
,"reprex"
,"reshape2"
,"rgl"
,"RgoogleMaps"
,"riingo"
,"rJava"
,"rjson"
,"rlang"
,"rmarkdown"
,"RMySQL"
,"roxygen2"
,"rprojroot"
,"rsample"
,"RSQLite"
,"rstan"
,"rstantools"
,"rstudioapi"
,"rversions"
,"rvest"
,"sandwich"
,"sass"
,"scales"
,"selectr"
,"sessioninfo"
,"shape"
,"shiny"
,"shiny.semantic"
,"slider"
,"snakecase"
,"sourcetools"
,"sp"
,"SparseM"
,"SQUAREM"
,"StanHeaders"
,"stringi"
,"stringr"
,"sys"
,"testthat"
,"TH.data"
,"tibble"
,"tidymodels"
,"tidyquant"
,"tidyr"
,"tidyselect"
,"tidyverse"
,"timeDate"
,"timetk"
,"tinytex"
,"tseries"
,"tsfeatures"
,"TTR"
,"tune"
,"tzdb"
,"urca"
,"usethis"
,"utf8"
,"uuid"
,"vcd"
,"vctrs"
,"viridisLite"
,"vroom"
,"waldo"
,"warp"
,"whisker"
,"withr"
,"workflows"
,"workflowsets"
,"xfun"
,"xgboost"
,"XLConnect"
,"xlsx"
,"xlsxjars"
,"XML"
,"xml2"
,"xopen"
,"xtable"
,"xts"
,"yaml"
,"yardstick"
,"zip"
,"zoo"
,"foreign"
,"mgcv"
,"nlme"
,"survival"
,"boot"
,"class"
,"cluster"
,"codetools"
,"KernSmooth"
,"lattice"
,"MASS"
,"Matrix"
,"nnet"
,"rpart"
,"spatial")
library(ggplot2)
# Use stdout as per normal...
print("Hello, world!")
# Use plots...
plot(cars)
# Even ggplot!
qplot(wt, mpg, data = mtcars, colour = factor(cyl))
negative_likelihood <- function(p){
dbinom(heads, 100, p)*-1
}
# Test that our function is behaving as expected
negative_likelihood(biased_prob)
heads <- rbinom(1,100,0.5)
negative_likelihood <- function(p){
dbinom(heads, 100, p)*-1
}
# Test that our function is behaving as expected
negative_likelihood(biased_prob)
biased_prob <- 0.6
negative_likelihood <- function(p){
dbinom(heads, 100, p)*-1
}
# Test that our function is behaving as expected
negative_likelihood(biased_prob)
nlm(negative_likelihood,0.5,stepmax=0.5)
# simulate some log-logistic data
library(FAdist)
install.packages('FAdist')
# simulate some log-logistic data
library(FAdist)
vY = rllog(n = 1000, shape = 5, scale = 6)
vY
# log-likelihood function
fnLLLL = function(vParams, vData) {
# uses the density function of the log-logistic function from FAdist
return(-sum(log(dllog(vData, shape = vParams[1], scale = vParams[2]))))
}
# optimize it
optim(c(2, 3), fnLLLL, vData = vY)
install.packages('actuar')
devtools::load_all(".")
devtools::load_all(".")
x<-rnorm(100,mean=2,sd=2)
stGOF(x ~ norm, x, order = 4, method = "MLE")
stGOF(x ~ logis, x, order = 4, method = "MLE")
devtools::load_all(".")
stGOF(x ~ logis, x, order = 4, method = "MLE")
stGOF(x ~ norm, x, order = 4, method = "MLE")
stGOF(x ~ logis, x, order = 4, method = "MME")
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
?stGOF
devtools::load_all(".")
devtools::load_all(".")
?stGOF
stGOF(x ~ norm, x, order = 4, method = "MLE")
install.packages("devtools")
devtools::install_github("krakla/stGOF")
install.packages("devtools")
devtools::install_github("krakla/stGOF")
devtools::install_github("krakla/stGOF", force = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(stGOF)
stGOF(PRG ~ unif, PRG, order = 4, method = "MLE")
stGOF(pulse ~ pois, PCB, method = "MME", B = 1000, max.order = 8, horizon="subset", criterion="BIC")
summary(PCB)
library(stGOF)
summary(PRG)
ggplot2::ggplot(data = PRG) + geom_histogram()
load("~/UHasselt/final/stGOF/data/PRG.rda")
summary(PRG)
ggplot2::ggplot(data = PRG) + geom_histogram()
summary(PRG)
ggplot2::ggplot(data = data.frame(PRG)) + geom_histogram()
PRG <- data.frame(PRG)
View(PRG)
summary(PRG)
ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) + geom_histogram()
summary(PRG)
ggplot2::ggplot(data = PRG, aes(x = PRG)) + geom_histogram()
summary(PRG)
ggplot2::ggplot(data = PRG, aes(x = PRG)) + geom_histogram()
View(PRG)
summary(PRG)
ggplot2::ggplot(data = PRG, aes(x = PRG)) + geom_histogram()
summary(PRG)
ggplot2::ggplot(data = cars, aes(x = PRG)) + geom_histogram()
summary(PRG)
ggplot2::ggplot(data = diamonds, aes(x = price)) + geom_histogram(bins = 10)
summary(PRG)
ggplot2::ggplot(data = PCB, aes(x = PCB)) + geom_histogram(bins = 10)
summary(PRG)
library(ggplot2)
ggplot(data = PCB, aes(x = PCB)) + geom_histogram(bins = 10)
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(bins = 10)
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(bins = 100)
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(bins = 50)
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram()
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = null)
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = NULL)
summary(PRG)
library(ggplot2)
ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(bin = NULL)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(bin = NULL)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(bin = 30)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 50)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 20)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30, fill = NULL)
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30, fill = NULL, color = "red")
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30, fill = "", color = "red")
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30, fill = "White", color = "red")
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30, fill = "White", color = "red", linetype = "longdash")
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30, color = "red", linetype = "longdash")
summary(PRG)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(binwidth = 30, color = "white", linetype = "longdash")
summary(PRG)
ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) + geom_histogram(binwidth = 30, color = "white", linetype = "longdash")
summary(PRG)
ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) + geom_histogram( color = "white", linetype = "longdash")
summary(PCB)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 50 ,color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 30 ,color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 3 ,color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 2 ,color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 10 ,color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 15 ,color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 12 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 10 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 20 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 2 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 5 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 3 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 4 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 5 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 7 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 1 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(binwidth = 3 ,color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_boxplot()
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_boxplot(notch=TRUE)
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_boxplot(notch=TRUE)
p + + coord_flip()
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
p <- ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_boxplot(notch=TRUE)
p + + coord_flip()
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_boxplot(notch=TRUE)
p + coord_flip()
summary(cultivars)
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_histogram(color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) + geom_boxplot()
p + coord_flip()
library(ggplot2)
summary(PRG)
ggplot(data = data.frame(PRG), aes(x = PRG)) + geom_histogram(color = "white", linetype = "longdash")
library(ggplot2)
summary(PRG)
ggplot(data = data.frame(PRG), aes(x = PRG)) + geom_histogram(color = "white", linetype = "longdash")
library(ggplot2)
summary(PRG)
ggplot(data = data.frame(PRG), aes(x = PRG)) + geom_histogram(stat_bin(bins = 30), color = "white", linetype = "longdash")
library(ggplot2)
summary(PRG)
ggplot(data = data.frame(PRG), aes(x = PRG)) + geom_histogram(bins = 30, color = "white", linetype = "longdash")
summary(PCB)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(color = "white", linetype = "longdash")
summary(PCB)
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) + geom_histogram(bins = 30, color = "white", linetype = "longdash")
summary(pulse)
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) + geom_histogram(binwidth = 12 ,color = "white", linetype = "longdash")
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot()
p + coord_flip()
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG)) +
geom_boxplot()
p + coord_flip()
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot()
p + coord_flip()
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot() + xlab = ""
p + coord_flip()
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot()+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
p + coord_flip()
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot()+
theme(axis.text.x=element_blank()
)
p + coord_flip()
library(ggplot2)
summary(PRG)
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot()+
xlab("")
p + coord_flip()
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) +
geom_boxplot()
p + coord_flip()
p <- ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) +
geom_boxplot()
p + coord_flip()
p <- ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) +
geom_boxplot()+xlab("")
p + coord_flip()
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot() + xlab("")
p + coord_flip()
ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PRG), aes(x = PRG)) +
geom_boxplot() + xlab("")
p + coord_flip()
ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(PCB), aes(x = PCB)) +
geom_boxplot() + xlab("")
p + coord_flip()
ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) +
geom_histogram(binwidth = 12 ,color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(pulse), aes(x = pulse)) +
geom_boxplot() + xlab("")
p + coord_flip()
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) +
geom_histogram(color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) +
geom_boxplot() + xlab("")
p + coord_flip()
ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) +
geom_histogram(bins = 30, color = "white", linetype = "longdash")
p <- ggplot2::ggplot(data = data.frame(cultivars), aes(x = cultivars)) +
geom_boxplot() + xlab("")
p + coord_flip()
